/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback, LocationsClient, LocationProtos } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Service to call Cloud DocumentAI to manage document collection (dataset).
 * @class
 * @memberof v1beta3
 */
export declare class DocumentServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    locationsClient: LocationsClient;
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    documentServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of DocumentServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new DocumentServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Returns relevant fields present in the requested document.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The resource name of the dataset that the document belongs to .
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {google.cloud.documentai.v1beta3.DocumentId} request.documentId
     *   Required. Document identifier.
     * @param {google.protobuf.FieldMask} request.readMask
     *   If set, only fields listed here will be returned. Otherwise, all fields
     *   will be returned by default.
     * @param {google.cloud.documentai.v1beta3.DocumentPageRange} request.pageRange
     *   List of pages for which the fields specified in the `read_mask` must
     *   be served.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.documentai.v1beta3.GetDocumentResponse|GetDocumentResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.get_document.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_GetDocument_async
     */
    getDocument(request?: protos.google.cloud.documentai.v1beta3.IGetDocumentRequest, options?: CallOptions): Promise<[
        protos.google.cloud.documentai.v1beta3.IGetDocumentResponse,
        protos.google.cloud.documentai.v1beta3.IGetDocumentRequest | undefined,
        {} | undefined
    ]>;
    getDocument(request: protos.google.cloud.documentai.v1beta3.IGetDocumentRequest, options: CallOptions, callback: Callback<protos.google.cloud.documentai.v1beta3.IGetDocumentResponse, protos.google.cloud.documentai.v1beta3.IGetDocumentRequest | null | undefined, {} | null | undefined>): void;
    getDocument(request: protos.google.cloud.documentai.v1beta3.IGetDocumentRequest, callback: Callback<protos.google.cloud.documentai.v1beta3.IGetDocumentResponse, protos.google.cloud.documentai.v1beta3.IGetDocumentRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets the `DatasetSchema` of a `Dataset`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The dataset schema resource name.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema
     * @param {boolean} request.visibleFieldsOnly
     *   If set, only returns the visible fields of the schema.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.documentai.v1beta3.DatasetSchema|DatasetSchema}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.get_dataset_schema.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_GetDatasetSchema_async
     */
    getDatasetSchema(request?: protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest, options?: CallOptions): Promise<[
        protos.google.cloud.documentai.v1beta3.IDatasetSchema,
        (protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest | undefined),
        {} | undefined
    ]>;
    getDatasetSchema(request: protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest, options: CallOptions, callback: Callback<protos.google.cloud.documentai.v1beta3.IDatasetSchema, protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest | null | undefined, {} | null | undefined>): void;
    getDatasetSchema(request: protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest, callback: Callback<protos.google.cloud.documentai.v1beta3.IDatasetSchema, protos.google.cloud.documentai.v1beta3.IGetDatasetSchemaRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates a `DatasetSchema`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.documentai.v1beta3.DatasetSchema} request.datasetSchema
     *   Required. The name field of the `DatasetSchema` is used to identify the
     *   resource to be updated.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   The update mask applies to the resource.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.documentai.v1beta3.DatasetSchema|DatasetSchema}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.update_dataset_schema.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_UpdateDatasetSchema_async
     */
    updateDatasetSchema(request?: protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest, options?: CallOptions): Promise<[
        protos.google.cloud.documentai.v1beta3.IDatasetSchema,
        (protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest | undefined),
        {} | undefined
    ]>;
    updateDatasetSchema(request: protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest, options: CallOptions, callback: Callback<protos.google.cloud.documentai.v1beta3.IDatasetSchema, protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest | null | undefined, {} | null | undefined>): void;
    updateDatasetSchema(request: protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest, callback: Callback<protos.google.cloud.documentai.v1beta3.IDatasetSchema, protos.google.cloud.documentai.v1beta3.IUpdateDatasetSchemaRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates metadata associated with a dataset.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.documentai.v1beta3.Dataset} request.dataset
     *   Required. The `name` field of the `Dataset` is used to identify the
     *   resource to be updated.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   The update mask applies to the resource.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.update_dataset.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_UpdateDataset_async
     */
    updateDataset(request?: protos.google.cloud.documentai.v1beta3.IUpdateDatasetRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.documentai.v1beta3.IDataset, protos.google.cloud.documentai.v1beta3.IUpdateDatasetOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateDataset(request: protos.google.cloud.documentai.v1beta3.IUpdateDatasetRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IDataset, protos.google.cloud.documentai.v1beta3.IUpdateDatasetOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateDataset(request: protos.google.cloud.documentai.v1beta3.IUpdateDatasetRequest, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IDataset, protos.google.cloud.documentai.v1beta3.IUpdateDatasetOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateDataset()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.update_dataset.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_UpdateDataset_async
     */
    checkUpdateDatasetProgress(name: string): Promise<LROperation<protos.google.cloud.documentai.v1beta3.Dataset, protos.google.cloud.documentai.v1beta3.UpdateDatasetOperationMetadata>>;
    /**
     * Import documents into a dataset.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The dataset resource name.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {number[]} request.batchDocumentsImportConfigs
     *   Required. The Cloud Storage uri containing raw documents that must be
     *   imported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.import_documents.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_ImportDocuments_async
     */
    importDocuments(request?: protos.google.cloud.documentai.v1beta3.IImportDocumentsRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.documentai.v1beta3.IImportDocumentsResponse, protos.google.cloud.documentai.v1beta3.IImportDocumentsMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    importDocuments(request: protos.google.cloud.documentai.v1beta3.IImportDocumentsRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IImportDocumentsResponse, protos.google.cloud.documentai.v1beta3.IImportDocumentsMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    importDocuments(request: protos.google.cloud.documentai.v1beta3.IImportDocumentsRequest, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IImportDocumentsResponse, protos.google.cloud.documentai.v1beta3.IImportDocumentsMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `importDocuments()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.import_documents.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_ImportDocuments_async
     */
    checkImportDocumentsProgress(name: string): Promise<LROperation<protos.google.cloud.documentai.v1beta3.ImportDocumentsResponse, protos.google.cloud.documentai.v1beta3.ImportDocumentsMetadata>>;
    /**
     * Deletes a set of documents.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The dataset resource name.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {google.cloud.documentai.v1beta3.BatchDatasetDocuments} request.datasetDocuments
     *   Required. Dataset documents input. If given `filter`, all documents
     *   satisfying the filter will be deleted. If given documentIds, a maximum of
     *   50 documents can be deleted in a batch. The request will be rejected if
     *   more than 50 document_ids are provided.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.batch_delete_documents.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_BatchDeleteDocuments_async
     */
    batchDeleteDocuments(request?: protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsResponse, protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    batchDeleteDocuments(request: protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsResponse, protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    batchDeleteDocuments(request: protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsRequest, callback: Callback<LROperation<protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsResponse, protos.google.cloud.documentai.v1beta3.IBatchDeleteDocumentsMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `batchDeleteDocuments()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.batch_delete_documents.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_BatchDeleteDocuments_async
     */
    checkBatchDeleteDocumentsProgress(name: string): Promise<LROperation<protos.google.cloud.documentai.v1beta3.BatchDeleteDocumentsResponse, protos.google.cloud.documentai.v1beta3.BatchDeleteDocumentsMetadata>>;
    /**
     * Returns a list of documents present in the dataset.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The resource name of the dataset to be listed.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {number} request.pageSize
     *   The maximum number of documents to return. The service may return
     *   fewer than this value.
     *   If unspecified, at most 20 documents will be returned.
     *   The maximum value is 100; values above 100 will be coerced to 100.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListDocuments` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListDocuments`
     *   must match the call that provided the page token.
     * @param {string} [request.filter]
     *   Optional. Query to filter the documents based on
     *   https://google.aip.dev/160.
     *   ## Currently support query strings are:
     *
     *   `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED`
     *   - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED`
     *   - `DisplayName=\"file_name.pdf\"`
     *   - `EntityType=abc/def`
     *   - `TagName=\"auto-labeling-running\"|\"sampled\"`
     *
     *   Note:
     *   - Only `AND`, `=` and `!=` are supported.
     *       e.g. `DisplayName=file_name AND EntityType!=abc` IS supported.
     *   - Wildcard `*` is supported only in `DisplayName` filter
     *   - No duplicate filter keys are allowed,
     *       e.g. `EntityType=a AND EntityType=b` is NOT supported.
     *   - String match is case sensitive (for filter `DisplayName` & `EntityType`).
     * @param {boolean} [request.returnTotalSize]
     *   Optional. Controls if the request requires a total size of matched
     *   documents. See
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.total_size|ListDocumentsResponse.total_size}.
     *
     *   Enabling this flag may adversely impact performance.
     *
     *   Defaults to false.
     * @param {number} [request.skip]
     *   Optional. Number of results to skip beginning from the `page_token` if
     *   provided. https://google.aip.dev/158#skipping-results. It must be a
     *   non-negative integer. Negative values will be rejected. Note that this is
     *   not the number of pages to skip. If this value causes the cursor to move
     *   past the end of results,
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.document_metadata|ListDocumentsResponse.document_metadata}
     *   and
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.next_page_token|ListDocumentsResponse.next_page_token}
     *   will be empty.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.documentai.v1beta3.DocumentMetadata|DocumentMetadata}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listDocumentsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listDocuments(request?: protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.documentai.v1beta3.IDocumentMetadata[],
        protos.google.cloud.documentai.v1beta3.IListDocumentsRequest | null,
        protos.google.cloud.documentai.v1beta3.IListDocumentsResponse
    ]>;
    listDocuments(request: protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, protos.google.cloud.documentai.v1beta3.IListDocumentsResponse | null | undefined, protos.google.cloud.documentai.v1beta3.IDocumentMetadata>): void;
    listDocuments(request: protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, callback: PaginationCallback<protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, protos.google.cloud.documentai.v1beta3.IListDocumentsResponse | null | undefined, protos.google.cloud.documentai.v1beta3.IDocumentMetadata>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The resource name of the dataset to be listed.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {number} request.pageSize
     *   The maximum number of documents to return. The service may return
     *   fewer than this value.
     *   If unspecified, at most 20 documents will be returned.
     *   The maximum value is 100; values above 100 will be coerced to 100.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListDocuments` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListDocuments`
     *   must match the call that provided the page token.
     * @param {string} [request.filter]
     *   Optional. Query to filter the documents based on
     *   https://google.aip.dev/160.
     *   ## Currently support query strings are:
     *
     *   `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED`
     *   - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED`
     *   - `DisplayName=\"file_name.pdf\"`
     *   - `EntityType=abc/def`
     *   - `TagName=\"auto-labeling-running\"|\"sampled\"`
     *
     *   Note:
     *   - Only `AND`, `=` and `!=` are supported.
     *       e.g. `DisplayName=file_name AND EntityType!=abc` IS supported.
     *   - Wildcard `*` is supported only in `DisplayName` filter
     *   - No duplicate filter keys are allowed,
     *       e.g. `EntityType=a AND EntityType=b` is NOT supported.
     *   - String match is case sensitive (for filter `DisplayName` & `EntityType`).
     * @param {boolean} [request.returnTotalSize]
     *   Optional. Controls if the request requires a total size of matched
     *   documents. See
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.total_size|ListDocumentsResponse.total_size}.
     *
     *   Enabling this flag may adversely impact performance.
     *
     *   Defaults to false.
     * @param {number} [request.skip]
     *   Optional. Number of results to skip beginning from the `page_token` if
     *   provided. https://google.aip.dev/158#skipping-results. It must be a
     *   non-negative integer. Negative values will be rejected. Note that this is
     *   not the number of pages to skip. If this value causes the cursor to move
     *   past the end of results,
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.document_metadata|ListDocumentsResponse.document_metadata}
     *   and
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.next_page_token|ListDocumentsResponse.next_page_token}
     *   will be empty.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1beta3.DocumentMetadata|DocumentMetadata} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listDocumentsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listDocumentsStream(request?: protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listDocuments`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.dataset
     *   Required. The resource name of the dataset to be listed.
     *   Format:
     *   projects/{project}/locations/{location}/processors/{processor}/dataset
     * @param {number} request.pageSize
     *   The maximum number of documents to return. The service may return
     *   fewer than this value.
     *   If unspecified, at most 20 documents will be returned.
     *   The maximum value is 100; values above 100 will be coerced to 100.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListDocuments` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListDocuments`
     *   must match the call that provided the page token.
     * @param {string} [request.filter]
     *   Optional. Query to filter the documents based on
     *   https://google.aip.dev/160.
     *   ## Currently support query strings are:
     *
     *   `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED`
     *   - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED`
     *   - `DisplayName=\"file_name.pdf\"`
     *   - `EntityType=abc/def`
     *   - `TagName=\"auto-labeling-running\"|\"sampled\"`
     *
     *   Note:
     *   - Only `AND`, `=` and `!=` are supported.
     *       e.g. `DisplayName=file_name AND EntityType!=abc` IS supported.
     *   - Wildcard `*` is supported only in `DisplayName` filter
     *   - No duplicate filter keys are allowed,
     *       e.g. `EntityType=a AND EntityType=b` is NOT supported.
     *   - String match is case sensitive (for filter `DisplayName` & `EntityType`).
     * @param {boolean} [request.returnTotalSize]
     *   Optional. Controls if the request requires a total size of matched
     *   documents. See
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.total_size|ListDocumentsResponse.total_size}.
     *
     *   Enabling this flag may adversely impact performance.
     *
     *   Defaults to false.
     * @param {number} [request.skip]
     *   Optional. Number of results to skip beginning from the `page_token` if
     *   provided. https://google.aip.dev/158#skipping-results. It must be a
     *   non-negative integer. Negative values will be rejected. Note that this is
     *   not the number of pages to skip. If this value causes the cursor to move
     *   past the end of results,
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.document_metadata|ListDocumentsResponse.document_metadata}
     *   and
     *   {@link protos.google.cloud.documentai.v1beta3.ListDocumentsResponse.next_page_token|ListDocumentsResponse.next_page_token}
     *   will be empty.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.documentai.v1beta3.DocumentMetadata|DocumentMetadata}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/document_service.list_documents.js</caption>
     * region_tag:documentai_v1beta3_generated_DocumentService_ListDocuments_async
     */
    listDocumentsAsync(request?: protos.google.cloud.documentai.v1beta3.IListDocumentsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.documentai.v1beta3.IDocumentMetadata>;
    /**
     * Gets information about a location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Resource name for the location.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const [response] = await client.getLocation(request);
     * ```
     */
    getLocation(request: LocationProtos.google.cloud.location.IGetLocationRequest, options?: gax.CallOptions | Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>, callback?: Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>): Promise<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Lists information about the supported locations for this service. Returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const iterable = client.listLocationsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     * ```
     */
    listLocationsAsync(request: LocationProtos.google.cloud.location.IListLocationsRequest, options?: CallOptions): AsyncIterable<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Gets the latest state of a long-running operation.  Clients can use this
     * method to poll the operation result at intervals as recommended by the API
     * service.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     *   for the details.
     * @param {function(?Error, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing
     *   {@link google.longrunning.Operation | google.longrunning.Operation}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     * {@link google.longrunning.Operation | google.longrunning.Operation}.
     * The promise has a method named "cancel" which cancels the ongoing API call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * const name = '';
     * const [response] = await client.getOperation({name});
     * // doThingsWith(response)
     * ```
     */
    getOperation(request: protos.google.longrunning.GetOperationRequest, options?: gax.CallOptions | Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>): Promise<[protos.google.longrunning.Operation]>;
    /**
     * Lists operations that match the specified filter in the request. If the
     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
     *
     * For-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     *   details.
     * @returns {Object}
     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * for await (const response of client.listOperationsAsync(request));
     * // doThingsWith(response)
     * ```
     */
    listOperationsAsync(request: protos.google.longrunning.ListOperationsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.longrunning.ListOperationsResponse>;
    /**
     * Starts asynchronous cancellation on a long-running operation.  The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed.  If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
     * {@link Operations.GetOperation} or
     * other methods to check whether the cancellation succeeded or whether the
     * operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with
     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
     * 1, corresponding to `Code.CANCELLED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be cancelled.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.cancelOperation({name: ''});
     * ```
     */
    cancelOperation(request: protos.google.longrunning.CancelOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.CancelOperationRequest, {} | undefined | null>, callback?: Callback<protos.google.longrunning.CancelOperationRequest, protos.google.protobuf.Empty, {} | undefined | null>): Promise<protos.google.protobuf.Empty>;
    /**
     * Deletes a long-running operation. This method indicates that the client is
     * no longer interested in the operation result. It does not cancel the
     * operation. If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be deleted.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     * for the details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.deleteOperation({name: ''});
     * ```
     */
    deleteOperation(request: protos.google.longrunning.DeleteOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>): Promise<protos.google.protobuf.Empty>;
    /**
     * Return a fully-qualified dataset resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor
     * @returns {string} Resource name string.
     */
    datasetPath(project: string, location: string, processor: string): string;
    /**
     * Parse the project from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromDatasetName(datasetName: string): string | number;
    /**
     * Parse the location from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromDatasetName(datasetName: string): string | number;
    /**
     * Parse the processor from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the processor.
     */
    matchProcessorFromDatasetName(datasetName: string): string | number;
    /**
     * Return a fully-qualified datasetSchema resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor
     * @returns {string} Resource name string.
     */
    datasetSchemaPath(project: string, location: string, processor: string): string;
    /**
     * Parse the project from DatasetSchema resource.
     *
     * @param {string} datasetSchemaName
     *   A fully-qualified path representing DatasetSchema resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromDatasetSchemaName(datasetSchemaName: string): string | number;
    /**
     * Parse the location from DatasetSchema resource.
     *
     * @param {string} datasetSchemaName
     *   A fully-qualified path representing DatasetSchema resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromDatasetSchemaName(datasetSchemaName: string): string | number;
    /**
     * Parse the processor from DatasetSchema resource.
     *
     * @param {string} datasetSchemaName
     *   A fully-qualified path representing DatasetSchema resource.
     * @returns {string} A string representing the processor.
     */
    matchProcessorFromDatasetSchemaName(datasetSchemaName: string): string | number;
    /**
     * Return a fully-qualified evaluation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor
     * @param {string} processor_version
     * @param {string} evaluation
     * @returns {string} Resource name string.
     */
    evaluationPath(project: string, location: string, processor: string, processorVersion: string, evaluation: string): string;
    /**
     * Parse the project from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the location from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the processor from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the processor.
     */
    matchProcessorFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the processor_version from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the processor_version.
     */
    matchProcessorVersionFromEvaluationName(evaluationName: string): string | number;
    /**
     * Parse the evaluation from Evaluation resource.
     *
     * @param {string} evaluationName
     *   A fully-qualified path representing Evaluation resource.
     * @returns {string} A string representing the evaluation.
     */
    matchEvaluationFromEvaluationName(evaluationName: string): string | number;
    /**
     * Return a fully-qualified processor resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor
     * @returns {string} Resource name string.
     */
    processorPath(project: string, location: string, processor: string): string;
    /**
     * Parse the project from Processor resource.
     *
     * @param {string} processorName
     *   A fully-qualified path representing Processor resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProcessorName(processorName: string): string | number;
    /**
     * Parse the location from Processor resource.
     *
     * @param {string} processorName
     *   A fully-qualified path representing Processor resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProcessorName(processorName: string): string | number;
    /**
     * Parse the processor from Processor resource.
     *
     * @param {string} processorName
     *   A fully-qualified path representing Processor resource.
     * @returns {string} A string representing the processor.
     */
    matchProcessorFromProcessorName(processorName: string): string | number;
    /**
     * Return a fully-qualified processorType resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor_type
     * @returns {string} Resource name string.
     */
    processorTypePath(project: string, location: string, processorType: string): string;
    /**
     * Parse the project from ProcessorType resource.
     *
     * @param {string} processorTypeName
     *   A fully-qualified path representing ProcessorType resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProcessorTypeName(processorTypeName: string): string | number;
    /**
     * Parse the location from ProcessorType resource.
     *
     * @param {string} processorTypeName
     *   A fully-qualified path representing ProcessorType resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProcessorTypeName(processorTypeName: string): string | number;
    /**
     * Parse the processor_type from ProcessorType resource.
     *
     * @param {string} processorTypeName
     *   A fully-qualified path representing ProcessorType resource.
     * @returns {string} A string representing the processor_type.
     */
    matchProcessorTypeFromProcessorTypeName(processorTypeName: string): string | number;
    /**
     * Return a fully-qualified processorVersion resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} processor
     * @param {string} processor_version
     * @returns {string} Resource name string.
     */
    processorVersionPath(project: string, location: string, processor: string, processorVersion: string): string;
    /**
     * Parse the project from ProcessorVersion resource.
     *
     * @param {string} processorVersionName
     *   A fully-qualified path representing ProcessorVersion resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProcessorVersionName(processorVersionName: string): string | number;
    /**
     * Parse the location from ProcessorVersion resource.
     *
     * @param {string} processorVersionName
     *   A fully-qualified path representing ProcessorVersion resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProcessorVersionName(processorVersionName: string): string | number;
    /**
     * Parse the processor from ProcessorVersion resource.
     *
     * @param {string} processorVersionName
     *   A fully-qualified path representing ProcessorVersion resource.
     * @returns {string} A string representing the processor.
     */
    matchProcessorFromProcessorVersionName(processorVersionName: string): string | number;
    /**
     * Parse the processor_version from ProcessorVersion resource.
     *
     * @param {string} processorVersionName
     *   A fully-qualified path representing ProcessorVersion resource.
     * @returns {string} A string representing the processor_version.
     */
    matchProcessorVersionFromProcessorVersionName(processorVersionName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
